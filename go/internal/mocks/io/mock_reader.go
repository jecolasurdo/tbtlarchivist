// Code generated by MockGen. DO NOT EDIT.
// Source: go/internal/utils/framescanner_test.go

// Package mock_io is a generated GoMock package.
package mock_io

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIOReader is a mock of IOReader interface
type MockIOReader struct {
	ctrl     *gomock.Controller
	recorder *MockIOReaderMockRecorder
}

// MockIOReaderMockRecorder is the mock recorder for MockIOReader
type MockIOReaderMockRecorder struct {
	mock *MockIOReader
}

// NewMockIOReader creates a new mock instance
func NewMockIOReader(ctrl *gomock.Controller) *MockIOReader {
	mock := &MockIOReader{ctrl: ctrl}
	mock.recorder = &MockIOReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIOReader) EXPECT() *MockIOReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockIOReader) Read(p []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", p)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockIOReaderMockRecorder) Read(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockIOReader)(nil).Read), p)
}
